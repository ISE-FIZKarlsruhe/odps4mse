LABEL	LOCAL	TYPE	IRI	ALT_LABELS	SYNONYMS	COMMENT
InputOutputSpecification	InputOutputSpecification	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InputOutputSpecification			/
QualitativeParameter	QualitativeParameter	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#QualitativeParameter			parameters that have only qualitative values
has_defaultElement	has_defaultElement	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_defaultElement			
UserTask	UserTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#UserTask			A User Task is a typical “workflow” Task where a human performer performs the Task with the assistance of a software application and is scheduled through a task list manager of some sort.
Resource	Resource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Resource			The Resource class is used to specify resources that can be referenced by Activities. These Resources can be Human Resources as well as any other resource assigned to Activities during Process execution time. The definition of a Resource is “abstract,” because it only defines the Resource, without detailing how e.g., actual user IDs are associated at runtime. Multiple Activities can utilize the same Resource.
body	body	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#body			The body of the Expression.
isSequential	isSequential	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isSequential			This attribute is a flag that controls whether the Activity instances will execute sequentially or in parallel.
ComplexMultiInstanceLoopCharacteristics	ComplexMultiInstanceLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ComplexMultiInstanceLoopCharacteristics			"Complex: the complexBehaviorDefinitions are consulted to determine if and which Events to throw.
Any thrown Events can be caught by boundary Events on the Multi-Instance Activity."
BusinessRuleTask	BusinessRuleTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#BusinessRuleTask			A Business Rule Task provides a mechanism for the Process to provide input to a Business Rules Engine and to get the output of calculations that the Business Rules Engine might provide. The InputOutputSpecification of the Task (see page 211) will allow the Process to send data to and receive data from the Business Rules Engine.
ComplexBehaviorDefinition	ComplexBehaviorDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ComplexBehaviorDefinition			This element controls when and which Events are thrown in case behavior of the Multi-Instance Activity is set to complex.
has_timeDuration	has_timeDuration	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_timeDuration			"If the trigger is a Timer, then a timeDuration MAY be entered. Timer attributes are mutually exclusive and if any of the other Timer attributes is set, timeDuration MUST NOT be set (if the isExecutable attribute of the Process is set to true).
The return type of the attribute timeDuration MUST conform to the ISO-8601 format for time interval representations."
SequentialAdHocSubProcess	SequentialAdHocSubProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SequentialAdHocSubProcess			only one Activity can be performed at a time
has_resourceInputRef	has_resourceInputRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceInputRef			
MultiInstanceLoopCharacteristics	MultiInstanceLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#MultiInstanceLoopCharacteristics			The MultiInstanceLoopCharacteristics class allows for creation of a desired number of Activity instances. The instances MAY execute in parallel or MAY be sequential. Either an Expression is used to specify or calculate the desired number of instances or a data driven setup can be used. In that case a data input can be specified, which is able to handle a collection of data. The number of items in the collection determines the number of Activity instances. This data input can be produced by an input Data Association. The modeler can also configure this loop to control the tokens produced.
has_completionCondition	has_completionCondition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_completionCondition			This attribute defines a boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.
escalationCode	escalationCode	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#escalationCode			"For an End Event:
If the Result is an Escalation, then the escalationCode MUST be supplied (if the processType attribute of the Process is set to executable). This “throws” the Escalation.
For an Intermediate Event within normal flow: If the trigger is an Escalation, then the escalationCode MUST be entered (if the processType attribute of the Process is set to executable). This “throws” the Escalation. For an Intermediate Event attached to the boundary of an Activity: If the trigger is an Escalation, then the escalationCode MAY be entered. This Event “catches” the Escalation. If there is no escalationCode, then any Escalation SHALL trigger the Event. If there is an escalationCode, then only an Escalation that matches the escalationCode SHALL trigger the Event."
Telecommand	Telecommand	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Telecommand			/
has_dataResourceOutput	has_dataResourceOutput	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_dataResourceOutput			
EscalationEvent	EscalationEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EscalationEvent			
has_inputResourceItem	has_inputResourceItem	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_inputResourceItem			
ConditionExpression	ConditionExpression	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConditionExpression			/
Error	Error	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Error			An Error represents the content of an Error Event or the Fault of a failed Operation. An ItemDefinition is used to specify the structure of the Error. An Error is generated when there is a critical problem in the processing of an Activity or when the execution of an Operation failed.
is_composedOf	is_composedOf	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_composedOf			
is_partOf	is_partOf	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_partOf			
GlobalTask	GlobalTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#GlobalTask			A Global Task is a reusable, atomic Task definition that can be called from within any Process by a Call Activity.
SignalEventDefinition	SignalEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SignalEventDefinition			/
has_outputResourceItem	has_outputResourceItem	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_outputResourceItem			
has_inMessageRef	has_inMessageRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_inMessageRef			
has_complexGateway	has_complexGateway	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_complexGateway			[IRIT] references the ComplexGateway which is concerned with the Expression
EventSubProcessStartEvent	EventSubProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EventSubProcessStartEvent			The StartEvent of an EventBasedSubProcess
FlowElementsContainer	FlowElementsContainer	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#FlowElementsContainer			/
has_oneBehaviorEventRef	has_oneBehaviorEventRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_oneBehaviorEventRef			The EventDefinition which is thrown when behavior is set to one and the first internal Activity instance has completed.
has_parameterExpectedValue	has_parameterExpectedValue	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameterExpectedValue			
ResourceState	ResourceState	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ResourceState			
InputSet	InputSet	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InputSet			An InputSet is a collection of Resource elements that together define a valid set of Resources  for an InputOutputSpecification. An InputOutputSpecification MUST have at least one InputSet element. An InputSet MAY reference zero or more Resource elements. A single Resource MAY be associated with multiple InputSet elements, but it MUST always be referenced by at least one InputSet.
has_condition	has_condition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_condition			This relation has two source concepts. The definition is related to the source concept: (1) conditionalEventDefinition: The Expression might be underspecified and provided in the form of natural language. For executable Processes (isExecutable = true), if the trigger is Conditional, then a FormalExpression MUST be entered. (2) complexBehaviorDefinition: This attribute defines a boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.
MixedGateway	MixedGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#MixedGateway			
ManualTask	ManualTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ManualTask			A Manual Task is a Task that is expected to be performed without the aid of any business process execution engine or any application. An example of this could be a telephone technician installing a telephone at a customer location.
has_property	has_property	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_property			Modeler-defined properties MAY be added to a Process. These properties are contained within the Process. All Tasks and Sub-Processes SHALL have access to these properties.
has_sequenceFlow	has_sequenceFlow	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_sequenceFlow			[IRIT] specifies the SequenceFlow of the FlowNode
NoneEvent	NoneEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NoneEvent			
has_part	has_part	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_part			
UnitOfMeasure	UnitOfMeasure	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#UnitOfMeasure			
SendTask	SendTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SendTask			A Send Task is a simple Task that is designed to send a Message to an external Participant (relative to the Process). Once the Message has been sent, the Task is completed.
Signal	Signal	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Signal			A BPMN Signal is similar to a signal flare that shot into the sky for anyone who might be interested to notice and then react. Thus, there is a source of the Signal, but no specific intended target.
id	id	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#id			This attribute is used to uniquely identify BPMN elements. The id is REQUIRED if this element is referenced or intended to be referenced by something else. If the element is not currently referenced and is never intended to be referenced, the id MAY be omitted.
InputOutputBinding	InputOutputBinding	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InputOutputBinding			When a CallableElement is exposed as a Service, it has to define one or more InputOutputBinding elements. An InputOutputBinding element binds one Input and one Output of the InputOutputSpecification to an Operation of a Service Interface.
has_timeCycle	has_timeCycle	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_timeCycle			If the trigger is a Timer, then a timeCycle MAY be entered. Timer attributes are mutually exclusive and if any of the other Timer attributes is set, timeCycle MUST NOT be set (if the isExecutable attribute of the Process is set to true). The return type of the attribute timeCycle MUST conform to the ISO-8601 format for recurring time interval representations.
BoundaryEvent	BoundaryEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#BoundaryEvent			
has_ioBinding	has_ioBinding	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_ioBinding			The InputOutputBinding defines a combination of one InputSet and one OutputSet in order to bind this to an operation defined in an interface.
has_activityRef	has_activityRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_activityRef			"For a Start Event:
This Event “catches” the compensation for an Event Sub-Process. No further
information is REQUIRED. The Event Sub-Process will provide the Id necessary
to match the Compensation Event with the Event that threw the compensation,
or the compensation will have been a broadcast.
For an End Event:
The Activity to be compensated MAY be supplied. If an Activity is not supplied,
then the compensation is broadcast to all completed Activities in the current Sub-
Process (if present), or the entire Process instance (if at the global level).
For an Intermediate Event within normal flow:
The Activity to be compensated MAY be supplied. If an Activity is not supplied,
then the compensation is broadcast to all completed Activities in the current Sub-
Process (if present), or the entire Process instance (if at the global level). This
“throws” the compensation.
For an Intermediate Event attached to the boundary of an Activity:
This Event “catches” the compensation. No further information is REQUIRED. The
Activity the Event is attached to will provide the Id necessary to match the
Compensation Event with the Event that threw the compensation, or the
compensation will have been a broadcast."
TimerEvent	TimerEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TimerEvent			
describes	describes	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#describes			
is_leaderOf	is_leaderOf	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_leaderOf			
MaterialResource	MaterialResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#MaterialResource			a physical resource
has_callActivity	has_callActivity	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_callActivity			
Expression	Expression	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Expression			The Expression class is used to specify an Expression using natural-language text. These Expressions are not executable. The natural language text is captured using the documentation attribute, inherited from BaseElement.
Device	Device	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Device			/
NonExecutableBusinessProcess	NonExecutableBusinessProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NonExecutableBusinessProcess			
has_multiInstanceLoopCharacteristics	has_multiInstanceLoopCharacteristics	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_multiInstanceLoopCharacteristics			
ParameterExpectedValue	ParameterExpectedValue	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParameterExpectedValue			
maxValue	maxValue	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#maxValue			
loopMaximum	loopMaximum	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#loopMaximum			Serves as a cap on the number of iterations.
Property	Property	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Property			Modeler-defined properties MAY be added to a Process. These properties are contained within the Process. All Tasks and Sub-Processes SHALL have access to these properties.
has_subordinatedJob	has_subordinatedJob	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_subordinatedJob			
NormalSequenceFlow	NormalSequenceFlow	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NormalSequenceFlow			
Process	Process	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Process			A sequence or flow of Activities in an organization with the objective of carrying out work. In BPMN, a Process is depicted as a graph of Flow Elements, which are a set of Activities, Events, Gateways, and Sequence Flow that adhere to a finite execution semantics.
ParallelMultipleEvent	ParallelMultipleEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParallelMultipleEvent			all of the types of EventDefinition that are listed in the Event MUST be triggered.
has_activationCondition	has_activationCondition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_activationCondition			"Determines which combination of incoming tokens will be synchronized for
activation of the Gateway."
has_resourceInputs	has_resourceInputs	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceInputs			
has_supportedInterfaceRefs	has_supportedInterfaceRefs	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_supportedInterfaceRefs			The Interfaces describing the external behavior provided by this element.
LoopCharacteristics	LoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#LoopCharacteristics			Activities MAY be repeated sequentially, essentially behaving like a loop. The presence of LoopCharacteristics signifies that the Activity has looping behavior. LoopCharacteristics is an abstract class. Concrete subclasses define specific kinds of looping behavior.
TerminateEventDefinition	TerminateEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TerminateEventDefinition			/
has_inputResourceRef	has_inputResourceRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_inputResourceRef			
has_targetRef	has_targetRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_targetRef			"The FlowNode that the Sequence Flow is connecting to.
For a Process: Of the types of FlowNode, only Activities, Gateways, and Events can be the target. However, Activities that are Event Sub-Processes are not allowed to be a target.
For a Choreography: Of the types of FlowNode, only Choreography Activities, Gateways, and Events can be the target."
has_propertyElement	has_propertyElement	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_propertyElement			
has_event	has_event	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_event			
NonEventSubProcessStartEvent	NonEventSubProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NonEventSubProcessStartEvent			
value	value	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#value			
AdHocSubProcess	AdHocSubProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#AdHocSubProcess			An Ad-Hoc Sub-Process is a specialized type of Sub-Process that is a group of Activities that have no REQUIRED sequence relationships. A set of Activities can be defined for the Process, but the sequence and number of performances for the Activities is determined by the performers of the Activities.
SequenceFlow	SequenceFlow	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SequenceFlow			A connecting object that shows the order in which activities are performed in a Process and is represented with a solid graphical line. Each Flow has only one source and only one target. A Sequence Flow can cross the boundaries between Lanes of a Pool but cannot cross the boundaries of a Pool.
ErrorEvent	ErrorEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ErrorEvent			
ComplexGateway	ComplexGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ComplexGateway			The Complex Gateway can be used to model complex synchronization behavior. An Expression activationCondition is used to describe the precise behavior. For example, this Expression could specify that tokens on three out of five incoming Sequence Flows are needed to activate the Gateway. What tokens are produced by the Gateway is determined by conditions on the outgoing Sequence Flows as in the split behavior of the Inclusive Gateway. If tokens arrive later on the two remaining Sequence Flows, those tokens cause a reset of the Gateway and new token can be produced on the outgoing Sequence Flows. To determine whether it needs to wait for additional tokens before it can reset, the Gateway uses the synchronization semantics of the Inclusive Gateway.
EscalationEventDefinition	EscalationEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EscalationEventDefinition			/
has_loopActivity	has_loopActivity	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopActivity			
PrivateProcess	PrivateProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#PrivateProcess			A process that is internal to a specific organization and is the type of process that has been generally called a workflow or BPM process.
has_operationRef	has_operationRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_operationRef			This attribute specifies the operation that is invoked
has_parameter	has_parameter	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameter			
ConditionalEventDefinition	ConditionalEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConditionalEventDefinition			/
Scheme	Scheme	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Scheme			/
CatchEvent	CatchEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CatchEvent			Events that catch a trigger. All Start Events and some Intermediate Events are catching Events.
scriptFormat	scriptFormat	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#scriptFormat			Defines the format of the script. This attribute value MUST be specified with a mime-type format. And it MUST be specified if a script is provided.
WorkProduct	WorkProduct	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#WorkProduct			
ResourceCollection	ResourceCollection	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ResourceCollection			An abstract class that groups a set of resources
Transaction	Transaction	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Transaction			A Sub-Process that represents a set of coordinated activities carried out by independent, loosely-coupled systems in accordance with a contractually defined business relationship. This coordination leads to an agreed, consistent, and verifiable outcome across all participants.
EndEvent	EndEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EndEvent			As the name implies, the End Event indicates where a Process will end. In terms of Sequence Flows, the End Event ends the flow of the Process, and thus, will not have any outgoing Sequence Flows—no Sequence Flow can connect from an End Event.
script	script	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#script			The modeler MAY include a script that can be run when the Task is performed. If a script is not included, then the Task will act as the equivalent of an Abstract Task.
has_boundaryEventRef	has_boundaryEventRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_boundaryEventRef			"This references the Intermediate Events that are attached to the
boundary of the Activity."
state	state	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#state			
belongs	belongs	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#belongs			
TerminateEvent	TerminateEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TerminateEvent			
IntermediateEvent	IntermediateEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#IntermediateEvent			The Intermediate Event indicates where something happens (an Event) somewhere between the start and end of a Process. It will affect the flow of the Process, but will not start or (directly) terminate the process.
MultipleEvent	MultipleEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#MultipleEvent			
ThrowEvent	ThrowEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ThrowEvent			Events that throw a Result. All End Events and some Intermediate Events are throwing Events that MAY eventually be caught by another Event. Typically the trigger carries information out of the scope where the throw Event occurred into the scope of the catching Events. The throwing of a trigger MAY be either implicit as defined by this standard or an extension to it or explicit by a throw Event
Task	Task	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Task			An atomic activity that is included within a Process. A Task is used when the work in the Process is not broken down to a finer level of Process Model detail. Generally, an end-user, an application, or both will perform the Task. A Task object shares the same shape as the Sub-Process, which is a rectangle that has rounded corners.
HumanResource	HumanResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#HumanResource			Human agents contributing to the execution of business processes.
has_signalRef	has_signalRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_signalRef			[IRIT] specifies the Signal of the SignalEventDefinition
UserGuide	UserManual	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#UserManual			A user guide intended to give assistance to people using a particular system. Most user guides contain both a written guide and associated images. In the case of computer applications, it is usual to include screenshots of the human-machine interface(s), and hardware manuals often include clear, simplified diagrams.
has_operationInterface	has_operationInterface	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_operationInterface			
isForCompensation	isForCompensation	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isForCompensation			"A flag that identifies whether this Activity is intended for the purposes of compensation.
If false, then this Activity executes as a result of normal execution flow.
If true, this Activity is only activated when a Compensation Event is detected and initiated under Compensation Event visibility scope (see page 281 for more information on scopes)."
MessageEventDefinition	MessageEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#MessageEventDefinition			/
minValue	minValue	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#minValue			
ConditionalEvent	ConditionalEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConditionalEvent			
Agent	Agent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Agent			Person or a Software that performs an activity
scriptLanguage	scriptLanguage	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#scriptLanguage			
GlobalUserTask	GlobalUserTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#GlobalUserTask			/
Event	Event	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Event			An Event is something that “happens” during the course of a Process. These Events affect the flow of the Process and usually have a cause or an impact and in general require or allow for a reaction. The term “event” is general enough to cover many things in a Process. The start of an Activity, the end of an Activity, the change of state of a document, a Message that arrives, etc., all could be considered Events.
EventDefinition	EventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EventDefinition			"Event Definitions refers to the triggers of Catch Events (Start and receive Intermediate Events) and the Results of Throw Events (End Events and send Intermediate Events). The types of Event Definitions are: CancelEventDefinition, CompensationEventDefinition, ConditionalEventDefinition ErrorEventDefinition, EscalationEventDefinition, MessageEventDefinitio, LinkEventDefinition, SignalEventDefinition, TerminateEventDefinition, an TimerEventDefinition (see Table 10.93). A None Event is determined by an Event that does not specify an
 Event Definition. A Multiple Event is determined by an Event that specifies more than one Event Definition. The different types of Events (Start, End, and Intermediate) utilize a subset of the available types of Event Definitions."
isRequired	isRequired	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isRequired			Specifies, if a parameter is optional or mandatory.
has_conditionExpression	has_conditionExpression	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_conditionExpression			"An optional boolean Expression that acts as a gating condition. A token will only
be placed on this Sequence Flow if this conditionExpression evaluates to
true."
has_inclusiveGateway	has_inclusiveGateway	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_inclusiveGateway			[IRIT] specifies the inclusive gateway referenced by the default sequence flow
InterruptingEventSubProcessStartEvent	NonInterruptingEventSubProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NonInterruptingEventSubProcessStartEvent			
has_parameterValueBindingInput	has_parameterValueBindingInput	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameterValueBindingInput			
DataResource	DataResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#DataResource			/
ConditionalSequenceFlow	ConditionalSequenceFlow	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConditionalSequenceFlow			
has_timeDate	has_timeDate	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_timeDate			If the trigger is a Timer, then a timeDate MAY be entered. Timer attributes are mutually exclusive and if any of the other Timer attributes is set, timeDate MUST NOT be set (if the isExecutable attribute of the Process is set to true). The return type of the attribute timeDate MUST conform to the ISO-8601 format for date and time representations.
has_outgoing	has_outgoing	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_outgoing			identifies the outgoing Sequence Flow of the FlowNode.
CancelEventDefinition	CancelEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CancelEventDefinition			Cancel Events are only used in the context of modeling Transaction Sub-Processes (see page 178 for more details on Transactions). There are two variations: a catch Intermediate Event and an End Event.
OutputSet	OutputSet	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#OutputSet			An OutputSet is a collection of Resource elements that together can be produced as output from an Activity or Event. An InputOutputSpecification element MUST define at least OutputSet element. An OutputSet MAY reference zero or more Resource elements. A single Resource output MAY be associated with multiple OutputSet elements, but it MUST always be referenced by at least one OutputSet.
errorCode	errorCode	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#errorCode			"For an End Event:
If the result is an Error, then the errorCode MUST be supplied (if the processType attribute of the Process is set to executable) This “throws” the Error.
For an Intermediate Event within normal flow:
If the trigger is an Error, then the errorCode MUST be entered (if the processType attribute of the Process is set to executable). This “throws” the Error.
For an Intermediate Event attached to the boundary of an Activity:
If the trigger is an Error, then the errorCode MAY be entered. This Event “catches” the Error. If there is no errorCode, then any error SHALL trigger the Event. If there is an errorCode, then only an Error that matches the errorCode SHALL trigger the Event."
name	name	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#name			The descriptive name of the element.
Computer	Computer	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Computer			
StandardLoopCharacteristics	StandardLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#StandardLoopCharacteristics			The StandardLoopCharacteristics class defines looping behavior based on a boolean condition. The Activity will loop as long as the boolean condition is true. The condition is evaluated for every loop iteration, and MAY be evaluated at the beginning or at the end of the iteration. In addition, a numeric cap can be optionally specified. The number of iterations MAY NOT exceed this cap.
startQuantity	startQuantity	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#startQuantity			 This attribute defines the number of tokens that MUST arrive before the Activity can begin. Note that any value for the attribute that is greater than 1 is an advanced type of modeling and should be used with caution.
has_process	has_process	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_process			the process assigned to the resource role
ExecutableBusinessProcess	ExecutablePrivateProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ExecutablePrivateProcess			
has_expression	has_expression	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_expression			"The Expression that evaluates the value used to bind the
ResourceParameter. (ResourceParameterBinding)"
CompensateEventDefinition	CompensateEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CompensateEventDefinition			Compensation Events are used in the context of triggering or handling compensation (see page 302 for more details on compensation). There are four variations: a Start Event, both a catch and throw Intermediate Event, and an End Event.
ParameterValueBinding	ParameterValueBinding	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParameterValueBinding			An abstract class that binds a parameter to its value, and eventually its expected value.
method	method	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#method			The method is an attribute that defines the Transaction method used to commit or cancel a Transaction. For executable Processes, it SHOULD be set to a technology specific URI, e.g., http://schemas.xmlsoap.org/ws/2004/10/wsat for WSAtomicTransaction, or http://docs.oasis-open.org/ws-tx/wsba/2006/06/AtomicOutcome for WS-BusinessActivity.
Interface	Interface	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Interface			An interface defines a set of operations that are implemented by Services.
CallableElement	CallableElement	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CallableElement			CallableElement is the abstract super class of all Activities that have been defined outside of a Process or Choreography but which can be called (or reused), by a Call Activity, from within a Process or Choreography. It MAY reference Interfaces that define the service operations that it provides. The BPMN elements that can be called by Call Activities (i.e., are CallableElements) are: Process and GlobalTask (see Figure 10.43).
Job	Job	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Job			
Message	Message	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Message			A Message represents the content of a communication between two Participants. In BPMN 2.0, a Message is a graphical decorator (it was a supporting element in BPMN 1.2). An ItemDefinition is used to specify the Message structure.
SoftwareResource	SoftwareResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SoftwareResource			A software used by an agent to perform a process, or a software agent that executes specific tasks.
has_state	has_state	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_state			
has_incoming	has_incoming	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_incoming			identifies the incoming Sequence Flow of the FlowNode.
InclusiveGateway	InclusiveGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InclusiveGateway			A diverging Inclusive Gateway (Inclusive Decision) can be used to create alternative but also parallel paths within a Process flow. Unlike the Exclusive Gateway, all condition Expressions are evaluated. The true evaluation of one condition Expression does not exclude the evaluation of other condition Expressions. All Sequence Flows with a true evaluation will be traversed by a token. Since each path is considered to be independent, all combinations of the paths MAY be taken, from zero to all. However, it should be designed so that at least one path is taken.
has_loopCharacteristics	has_loopCharacteristics	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopCharacteristics			"An Activity MAY be performed once or MAY be repeated. If repeated,
the Activity MUST have loopCharacteristics that define the repetition
criteria (if the isExecutable attribute of the Process is set to
true)."
waitForCompletion	waitForCompletion	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#waitForCompletion			For a throw Compensation Event, this flag determines whether the throw Intermediate Event waits for the triggered compensation to complete (the default), or just triggers the compensation and immediately continues (the BPMN 1.2 behavior).
has_default	has_default	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_default			The Sequence Flow that will receive a token when none of the conditionExpressions on other outgoing Sequence Flows evaluate to true. The default Sequence Flow should not have a conditionExpression. Any such Expression SHALL be ignored.
ParallelGateway	ParallelGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParallelGateway			A Parallel Gateway is used to synchronize (combine) parallel flows and to create parallel flows.
supports	supports	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#supports			"Modelers can declare that they intend all executions or performances
of one Process to also be valid for another Process. This means they
expect all the executions or performances of the first Processes to also
follow the steps laid out in the second Process."
language	language	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#language			Overrides the Expression language specified in the Definitions. The language MUST be specified in a URI format.
LinkEventDefinition	LinkEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#LinkEventDefinition			A Link Event is a mechanism for connecting two sections of a Process. Link Events can be used to create looping situations or to avoid long Sequence Flow lines. The use of Link Events is limited to a single Process level (i.e., they cannot link a parent Process with a Sub-Process).
ParameterValue	ParameterValue	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParameterValue			
ErrorEventDefinition	ErrorEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ErrorEventDefinition			/
is_installedOn	is_installedOn	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_installedOn			
ExclusiveGateway	ExclusiveGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ExclusiveGateway			A diverging Exclusive Gateway (Decision) is used to create alternative paths within a Process flow. This is basically the “diversion point in the road” for a Process. For a given instance of the Process, only one of the paths can be taken.
NoneMultiInstanceLoopCharacteristics	NoneMultiInstanceLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NoneMultiInstanceLoopCharacteristics			"None: the EventDefinition which is associated through the noneEvent association will be thrown for each instance completing.
Any thrown Events can be caught by boundary Events on the Multi-Instance Activity."
has_sourceRef	has_sourceRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_sourceRef			"The FlowNode that the Sequence Flow is connecting from.
For a Process: Of the types of FlowNode, only Activities, Gateways, and Events can be the source. However, Activities that are Event Sub-Processes are not allowed to be a source.
For a Choreography: Of the types of FlowNode, only Choreography Activities, Gateways, and Events can be the source."
SubProcess	SubProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SubProcess			A Process that is included within another Process.
GlobalBusinessRuleTask	GlobalBusinessRuleTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#GlobalBusinessRuleTask			/
ManufacturingFacility	ManufacturingFacility	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ManufacturingFacility			/
instantiate	instantiate	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#instantiate			When true, receipt of one of the Events will instantiate the Process instance.
testBefore	testBefore	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#testBefore			Flag that controls whether the loop condition is evaluated at the beginning (testBefore = true) or at the end (testBefore = false) of the loop iteration.
has_eventDefinitionEvent	has_eventDefinitionEvent	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_eventDefinitionEvent			
plays	plays	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#plays			
has_parameterRef	has_parameterRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameterRef			Reference to the parameter defined by the Resource.
Component	Component	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Component			/
Escalation	Escalation	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Escalation			An Escalation identifies a business situation that a Process might need to react to. An ItemDefinition is used to specify the structure of the Escalation.
has_exclusiveGateway	has_exclusiveGateway	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_exclusiveGateway			[IRIT] specifies the exclusive gateway referenced by the default sequence flow
has_leader	has_leader	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_leader			
attachedToRef	is_attachedToRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_attachedToRef			Denotes the Activity that boundary Event is attached to.
IntermediateThrowEvent	IntermediateThrowEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#IntermediateThrowEvent			A Message Intermediate Event can be used to either send a Message or receive a Message.
groups	groups	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#groups			
ProcessStartEvent	ProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ProcessStartEvent			
SubProcessStartEvent	SubProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SubProcessStartEvent			
StartEvent	StartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#StartEvent			"As the name implies, the Start Event indicates where a particular Process will start. In terms of Sequence Flows, the Start Event starts the flow of the Process, and thus, will not have any incoming Sequence Flows—no Sequence Flow can connect to a Start Event.
flow of the Process and does not have any incoming Sequence Flow, but can have a Trigger. The Start Event is displayed as a circle, drawn with a single thin line."
has_eventDefinition	has_eventDefinition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_eventDefinition			"Defines the event EventDefinitions that are triggers expected for a catch Event. These EventDefinitions are only valid inside the current Event.
• If there is no EventDefinition defined, then this is considered a catch None Event and the Event will not have an internal marker (see Figure 10.91).
• If there is more than one EventDefinition defined, this is considered a catch Multiple Event and the Event will have the pentagon internal marker (see Figure 10.90).
This is an ordered set."
Factory	Factory	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Factory			/
Gateway	Gateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Gateway			Gateways are used to control how Sequence Flows interact as they converge and diverge within a Process. If the flow does not need to be controlled, then a Gateway is not needed. The term “Gateway” implies that there is a gating mechanism that either allows or disallows passage through the Gateway--that is, as tokens arrive at a Gateway, they can be merged together on input and/or split apart on output as the Gateway mechanisms are invoked.
has_container	has_container	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_container			[IRIT] this relation references the FlowElementContainer that includes the FlowElement
has_inputSet	has_inputSet	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_inputSet			A reference to the InputSets defined by the InputOutputSpecification. Every InputOutputSpecification MUST define at least one InputSet.
TimerEventDefinition	TimerEventDefinition	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TimerEventDefinition			/
has_superiorJob	has_superiorJob	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_superiorJob			
RootElement	RootElement	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#RootElement			"RootElement is the abstract super class for all BPMN elements that are contained within Definitions. When contained within Definitions, these elements have their own defined life-cycle and are not deleted with the deletion of other elements. Examples of concrete RootElements include Collaboration, Process, and Choreography. Depending on their use, RootElements can be referenced by multiple other elements (i.e., they can be reused). Some RootElements MAY be contained within other elements instead of Definitions. This is done to avoid the maintenance overhead of an independent life-cycle. For example, an EventDefinition would be contained in a Process since it is used only there. In this case the EventDefinition would be dependent on the tool life-cycle of
the Process."
has_ioSpecification	has_ioSpecification	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_ioSpecification			"The InputOutputSpecification defines the inputs and outputs and the InputSets and OutputSets for the Activity. See page 211 for more information on the InputOutputSpecification.

"
SparePart	SparePart	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SparePart			/
ScriptTask	ScriptTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ScriptTask			A Script Task is executed by a business process engine. The modeler or implementer defines a script in a language that the engine can interpret. When the Task is ready to start, the engine will execute the script. When the script is completed, the Task will also be completed.
completionQuantity	completionQuantity	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#completionQuantity			"This attribute defines the number of tokens that MUST be generated from the Activity. This number of tokens will be sent done any outgoing Sequence Flow (assuming any Sequence Flow conditions are satisfied).
Note that any value for the attribute that is greater than 1 is an advanced type of modeling and should be used with caution."
isImmediate	isImmediate	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isImmediate			"An optional boolean value specifying whether Activities or Choreography Activities not in the model containing the Sequence Flow can occur between the elements connected by the Sequence Flow. If the value is true, they MAY NOT occur. If the value is false, they MAY occur. Also see the isClosed attribute on Process, Choreography, and Collaboration. When the attribute has no value, the
default semantics depends on the kind of model containing Sequence Flows:
• For non-executable Processes (public Processes and non-executable private Processes) and Choreographies no value has the same semantics as if the value were false.
• For an executable Processes no value has the same semantics as if the value were true.
• For executable Processes, the attribute MUST NOT be false."
has_parameterValueBindingOutput	has_parameterValueBindingOutput	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameterValueBindingOutput			
ParallelEventBasedGateway	ParallelEventBasedGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParallelEventBasedGateway			
SignalEvent	SignalEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#SignalEvent			
InterruptingEventSubProcessStartEvent	InterruptingEventSubProcessStartEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InterruptingEventSubProcessStartEvent			
has_dataResourceInput	has_dataResourceInput	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_dataResourceInput			
Parameter	Parameter	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Parameter			A specific characteristic of an object that may have different values
UnspecifiedGateway	UnspecifiedGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#UnspecifiedGateway			
implementation	implementation	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#implementation			This attribute specifies the technology that will be used to send and receive the Messages. Valid values are ##unspecified for leaving the implementation technology open, ##WebService for the Web service technology or a URI identifying any other technology or coordination protocol. A Web service is the default technology.
Role	Role	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Role			
InterruptingBoundaryEvent	InterruptingBoundaryEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#InterruptingBoundaryEvent			the Activity attached to this event should be cancelled
has_unitOfMeasure	has_unitOfMeasure	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_unitOfMeasure			
Database	Database	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Database			/
type	type	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#type			
GlobalScriptTask	GlobalScriptTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#GlobalScriptTask			/
has_prefix	has_prefix	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_prefix			This relation allows to specifiy the prefix (centi, mili, etc.) of a given unit of measure.
has_noneBehaviorEventRef	has_noneBehaviorEventRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_noneBehaviorEventRef			
Activity	Activity	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Activity			Work that a company or organization performs using business processes. An activity can be atomic or non-atomic (compound). The types of activities that are a part of a Process Model are: Process, Sub-Process, and Task.
ConvergingGateway	ConvergingGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConvergingGateway			
has_activity	has_activity	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_activity			[IRIT]denotes the activity related to the source element
processType	processType	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#processType			
createdOn	createdOn	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#createdOn			
has_loopCondition	has_loopCondition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopCondition			A boolean Expression that controls the loop. The Activity will only loop as long as this condition is true. The looping behavior MAY be underspecified, meaning that the modeler can simply document the condition, in which case the loop cannot be formally executed.
has_complexBehaviorDefinition	has_complexBehaviorDefinition	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_complexBehaviorDefinition			
has_resourceOutputs	has_resourceOutputs	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceOutputs			
Tool	Tool	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Tool			/
has_messageRef	has_messageRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_messageRef			The Message MUST be supplied (if the isExecutable attribute of the Process is set to true).
cancelRemainingInstances	cancelRemainingInstances	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#cancelRemainingInstances			This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.
has_outputSet	has_outputSet	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_outputSet			A reference to the OutputSets defined by the InputOutputSpecification. Every InputOutputSpecification MUST define at least one OutputSet.
QuantitativeParameter	QuantitativeParameter	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#QuantitativeParameter			parameters that have only quantitative values
has_loopCardinality	has_loopCardinality	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopCardinality			
has_unit	has_unit	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_unit			
ConsumableResource	ConsumableResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ConsumableResource			/
ExclusiveEventBasedGateway	ExclusiveEventBasedGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ExclusiveEventBasedGateway			
Person	Person	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Person			Human individual
UO_0000000	UO_0000000	Class	http://purl.obolibrary.org/obo/UO_0000000			
ImplicitThrowEvent	ImplicitThrowEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ImplicitThrowEvent			A sub-type of throw Event is the ImplicitThrowEvent. This is a non-graphical Event that is used for Multi-Instance Activities (see page 191).
has_resourceParameters	has_resourceParameters	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceParameters			This model association specifies the definition of the parameters needed at runtime to resolve the Resource.
GlobalManualTask	GlobalManualTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#GlobalManualTask			/
has_escalationRef	has_escalationRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_escalationRef			If the trigger is an Escalation, then an Escalation payload MAY be provided.
has_flowElements	has_flowElements	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_flowElements			"This association specifies the particular flow elements contained in a
FlowElementContainer. Flow elements are Events, Gateways, Sequence
Flows, Activities, Data Objects, Data Associations, and Choreography
Activities."
firstName	firstName	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#firstName			
DefaultSequenceFlow	DefaultSequenceFlow	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#DefaultSequenceFlow			
AllMultiInstanceLoopCharacteristics	AllMultiInstanceLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#AllMultiInstanceLoopCharacteristics			"All: no Event is ever thrown, a token is produced after completion of all instances.
Any thrown Events can be caught by boundary Events on the Multi-Instance Activity."
Operation	Operation	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Operation			An Operation defines Messages that are consumed and, optionally, produced when the Operation is called. It can also define zero or more errors that are returned when operation fails. The Operation inherits the attributes and model associations of BaseElement
ParallelAdHocSubProcess	ParallelAdHocSubProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ParallelAdHocSubProcess			all the Activities of the Sub-Process can be performed in parallel
IntermediateCatchEvent	IntermediateCatchEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#IntermediateCatchEvent			"A Message Intermediate Event can be used to either send a Message or receive a Message. When used to “catch” the Message,
then the Event marker MUST be unfilled (see the lower figure on the right)."
has_outMessageRef	has_outMessageRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_outMessageRef			
ResourceParameter	ResourceParameter	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ResourceParameter			A parameter related to a specific resource, only one resource
EventBasedGateway	EventBasedGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EventBasedGateway			The Event-Based Gateway represents a branching point in the Process where the alternative paths that follow the Gateway are based on Events that occur, rather than the evaluation of Expressions using Process data (as with an Exclusive or Inclusive Gateway). A specific Event, usually the receipt of a Message, determines the path that will be taken. Basically, the decision is made by another Participant, based on data that is not visible to Process, thus, requiring the use of the Event-Based Gateway.
FlowNode	FlowNode	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#FlowNode			The FlowNode element is used to provide a single element as the source and target Sequence Flow associations (see Figure 8.35) instead of the individual associations of the elements that can connect to Sequence Flows (see the section above). Only the Gateway, Activity, Choreography Activity, and Event elements can connect to Sequence Flows and thus, these elements are the only ones that are sub-classes of FlowNode.
has_callableElement	has_callableElement	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_callableElement			
WorkProcedureDocument	WorkProcedureDocument	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#WorkProcedureDocument			A document that describes a business process (or a work procedure)
dependsOn	dependsOn	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#dependsOn			If an Activity A dependsOn an Activity B, A can not start before completing B.
Shop	Shop	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Shop			/
CancelEvent	CancelEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CancelEvent			
FlowElement	FlowElement	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#FlowElement			FlowElement is the abstract super class for all elements that can appear in a Process flow, which are FlowNodes (see page 99, which consist of Activities (see page 151), Choreography Activities (see page 321) Gateways (see page 287), and Events (see page 233), Data Objects (see page 205), Data Associations (see page 221), and Sequence Flows (see page 97).
Enterprise	Enterprise	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Enterprise			/
isClosed	isClosed	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isClosed			A boolean value specifying whether interactions, such as sending and receiving Messages and Events, not modeled in the Process can occur when the Process is executed or performed. If the value is true, they MAY NOT occur. If the value is false, they MAY occur.
takesPlaceAt	takesPlaceAt	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#takesPlaceAt			Allows to specifiy where the activity or the process will take place
ServiceTask	ServiceTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ServiceTask			A Service Task is a Task that uses some sort of service, which could be a Web service or an automated application.
TimeExpression	TimeExpression	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TimeExpression			An expression that specifies a duration, a specific date, or a cycle
has_nextFlowNode	has_nextFlowNode	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_nextFlowNode			
has_outputResourceRef	has_outputResourceRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_outputResourceRef			
has_rendering	has_rendering	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_rendering			
Group	Group	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Group			The Group class represents a collection of individual agents (and may itself play the role of a Agent, ie. something that can perform actions). [Definition extracted from FOAF Vocabulary Specification 0.99]
DivergingGateway	DivergingGateway	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#DivergingGateway			
CompensationEvent	CompensationEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CompensationEvent			
has_renderingTask	has_renderingTask	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_renderingTask			
is_responsibleFor	is_responsibleFor	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#is_responsibleFor			
has_source	has_source	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_source			"Used to reference the corresponding 'catch' or 'target' LinkEventDefinition, when
this LinkEventDefinition represents a 'throw' or 'source' LinkEventDefinition."
OneMultiInstanceLoopCharacteristics	OneMultiInstanceLoopCharacteristics	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#OneMultiInstanceLoopCharacteristics			"One: the EventDefinition referenced through the oneEvent association will be thrown upon the first instance completing.
Any thrown Events can be caught by boundary Events on the Multi-Instance Activity."
ReceiveTask	ReceiveTask	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ReceiveTask			A Receive Task is a simple Task that is designed to wait for a Message to arrive from an external Participant (relative to the Process). Once the Message has been received, the Task is completed.
created_by	created_by	AnnotationProperty	http://www.geneontology.org/formats/oboInOwl#created_by			
lastName	lastName	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#lastName			
Cell	Cell	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Cell			/
Station	Station	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Station			/
UnderspecifiedExpression	UnderspecifiedExpression	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#UnderspecifiedExpression			
has_loopResourceOutputRef	has_loopResourceOutputRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopResourceOutputRef			
parallelMultiple	parallelMultiple	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#parallelMultiple			This attribute is only relevant when the catch Event has more than EventDefinition (Multiple). If this value is true, then all of the types of triggers that are listed in the catch Event MUST be triggered before the Process is instantiated.
has_target	has_target	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_target			"Used to reference the corresponding 'throw' or 'source' LinkEventDefinition,
when this LinkEventDefinition represents a 'catch' or 'target' LinkEventDefinition."
TechnicalDocument	TechnicalDocument	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#TechnicalDocument			Specific type of document containing technical information about material or software resources such as the user manual.
CallActivity	CallActivity	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#CallActivity			A Call Activity identifies a point in the Process where a global Process or a Global Task is used. The Call Activity acts as a ‘wrapper’ for the invocation of a global Process or Global Task within the execution. The activation of a call Activity results in the transfer of control to the called global Process or Global Task.
BBO	BBO	Entity	https://www.irit.fr/recherches/MELODI/ontologies/BBO			"BBO is a business process ontology. The core element of BBO is a formalization of a BPMN 2.0 fragment (namely Chapter 10 of BPMN 2.0 specification). BPMN 2.0 is state-of-the-art meta-model of business processes.

Copyright © 2019 MELODI @ Toulouse Institute of Computer Science Research"
LinkEvent	LinkEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#LinkEvent			
has_parameterValue	has_parameterValue	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_parameterValue			
DocumentResource	DocumentResource	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#DocumentResource			/
has_errorRef	has_errorRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_errorRef			for an Operation instance: specifies errors that the Operation may return. An Operation MAY refer to zero or more Error elements.
has_resourceOutputRef	has_resourceOutputRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceOutputRef			
has_resourceParameterBindings	has_resourceParameterBindings	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resourceParameterBindings			"This defines the Parameter bindings used for the
Resource assignment (see below). Is only applicable if a
resourceRef is specified."
has_calledElement	has_calledElement	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_calledElement			"The element to be called, which will be either a Process or a
GlobalTask."
isExecutable	isExecutable	DatatypeProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#isExecutable			"An optional Boolean value specifying whether the Process is executable.
An executable Process is a private Process that has been modeled for the purpose of being executed according to the semantics of Chapter 14 (see page 426). Of course, during the development cycle of the Process, there will be stages where the Process does not have enough detail to be “executable.”
A non-executable Process is a private Process that has been modeled for the purpose of documenting Process behavior at a modeler-defined level of detail. Thus, information needed for execution, such as formal condition expressions are typically not included in a non-executable Process.
For public Processes, no value has the same semantics as if the value were false. The value MAY not be true for public Processes."
EventSubProcess	EventSubProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EventSubProcess			EventBasedSubProcess
has_previousFlowNode	has_previousFlowNode	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_previousFlowNode			
has_loopResourceInputRef	has_loopResourceInputRef	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_loopResourceInputRef			
UO_0000046	UO_0000046	Class	http://purl.obolibrary.org/obo/UO_0000046			
ExecutableScript	ExecutableScript	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#ExecutableScript			/
EquipmentDraw	EquipmentDraw	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#EquipmentDraw			Type of technical documentation containing the design information of a material resource.
Rendering	Rendering	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#Rendering			
NonInterruptingBoundaryEvent	NonInterruptingBoundaryEvent	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#NonInterruptingBoundaryEvent			the Activity attached to this event should not be cancelled
has_job	has_job	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_job			
PublicProcess	PublicProcess	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#PublicProcess			
has_interfaceOperation	has_interfaceOperation	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_interfaceOperation			
has_resource	has_resource	ObjectProperty	https://www.irit.fr/recherches/MELODI/ontologies/BBO#has_resource			
FormalExpression	FormalExpression	Class	https://www.irit.fr/recherches/MELODI/ontologies/BBO#FormalExpression			The FormalExpression class is used to specify an executable Expression using a specified Expression language. A natural-language description of the Expression can also be specified, in addition to the formal specification.
